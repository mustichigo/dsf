local httprequest = request or http_request or (syn and syn.request) or (http and http.request) or (fluxus and fluxus.request)
local HttpService = cloneref and cloneref(game:GetService("HttpService")) or game:GetService("HttpService")
local Players = cloneref and cloneref(game:GetService("Players")) or game:GetService("Players")
local TeleportService = cloneref and cloneref(game:GetService("TeleportService")) or game:GetService("TeleportService")
local TweenService = cloneref and cloneref(game:GetService("TweenService")) or game:GetService("TweenService")
local CoreGui = cloneref and cloneref(game:GetService("CoreGui")) or game:GetService("CoreGui")

-- Destroy existing if present
if shared.STREAM_SNIPER then
    shared.STREAM_SNIPER:Destroy()
end

-- Main GUI Creation (Basic Structure)
local Screenguini = Instance.new("ScreenGui")
Screenguini.Name = "StreamSniperV2"
Screenguini.Parent = CoreGui
Screenguini.ResetOnSpawn = false

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = Screenguini
MainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 65)  -- Gray background
MainFrame.BorderSizePixel = 0
MainFrame.Size = UDim2.new(0, 450, 0, 350)
MainFrame.Position = UDim2.new(0.5, -225, 0.5, -175)
MainFrame.Active = true
MainFrame.Draggable = true

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

-- Shadow removed, replaced with subtle gray border effect if needed, but keeping clean

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Parent = MainFrame
TitleBar.BackgroundColor3 = Color3.fromRGB(255, 170, 0)
TitleBar.BorderSizePixel = 0
TitleBar.Size = UDim2.new(1, 0, 0, 50)
TitleBar.ZIndex = 10

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = TitleBar

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Parent = TitleBar
TitleLabel.BackgroundTransparency = 1
TitleLabel.Size = UDim2.new(1, -60, 1, 0)
TitleLabel.Position = UDim2.new(0, 10, 0, 0)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "🚀 Advanced Stream Sniper v2.0"
TitleLabel.TextColor3 = Color3.fromRGB(35, 35, 45)
TitleLabel.TextSize = 18
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Parent = TitleBar
CloseButton.BackgroundTransparency = 1
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -40, 0, 10)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "✕"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 20
CloseButton.ZIndex = 11

CloseButton.MouseButton1Click:Connect(function()
    Screenguini:Destroy()
end)

-- Minimize Button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Parent = TitleBar
MinimizeButton.BackgroundTransparency = 1
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -80, 0, 10)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Text = "−"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 20
MinimizeButton.ZIndex = 11

local minimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    local targetSize = minimized and UDim2.new(0, 450, 0, 50) or UDim2.new(0, 450, 0, 350)
    TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {Size = targetSize}):Play()
    for _, child in ipairs(MainFrame:GetChildren()) do
        if child ~= TitleBar and child ~= UICorner then
            child.Visible = not minimized
        end
    end
end)

-- Start Button
local StartButton = Instance.new("TextButton")
StartButton.Name = "StartButton"
StartButton.Parent = MainFrame
StartButton.BackgroundColor3 = Color3.fromRGB(255, 170, 0)
StartButton.BorderSizePixel = 0
StartButton.Position = UDim2.new(0, 0, 1, -50)
StartButton.Size = UDim2.new(1, 0, 0, 50)
StartButton.Font = Enum.Font.GothamBold
StartButton.Text = "🚀 Start Sniping"
StartButton.TextColor3 = Color3.fromRGB(35, 35, 45)
StartButton.TextSize = 18
StartButton.ZIndex = 10

local StartCorner = Instance.new("UICorner")
StartCorner.CornerRadius = UDim.new(0, 12)
StartCorner.Parent = StartButton

-- GUI Upgrade: Clear and Recreate Content
local bgGradient = Instance.new("UIGradient")
bgGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(50,50,65)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(60,60,75))
}
bgGradient.Rotation = 45
bgGradient.Parent = MainFrame

-- Refined Content Frame
local ContentScroll = Instance.new("ScrollingFrame")
ContentScroll.Name = "ContentScroll"
ContentScroll.BackgroundTransparency = 1
ContentScroll.BorderSizePixel = 0
ContentScroll.Position = UDim2.new(0,0,0,50)
ContentScroll.Size = UDim2.new(1,0,1,-100)
ContentScroll.CanvasSize = UDim2.new(0,0,0,420)  -- Adjusted for content
ContentScroll.ScrollBarThickness = 8
ContentScroll.ScrollBarImageColor3 = Color3.fromRGB(255,170,0)
ContentScroll.Parent = MainFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0,12)
UIListLayout.Parent = ContentScroll

-- Function to create a modern section
local function createSection(title, height)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1,-20,0,height)
    frame.BackgroundColor3 = Color3.fromRGB(50,50,65)  -- Gray sections
    frame.BorderSizePixel = 0
    frame.LayoutOrder = #ContentScroll:GetChildren()
    frame.Parent = ContentScroll

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0,12)
    corner.Parent = frame

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1,-20,0,25)
    label.Position = UDim2.new(0,10,0,5)
    label.BackgroundTransparency = 1
    label.Text = "📌 "..title
    label.TextColor3 = Color3.fromRGB(255,170,0)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    return frame
end

-- Recreate sections
local InputSection = createSection("Target Input",130)
local SettingsSection = createSection("Settings",90)
local TargetSection = createSection("Target Info",130)
local ProgressSection = createSection("Progress",70)

-- Input Section
local function createTextBox(parent, placeholder, position)
    local box = Instance.new("TextBox")
    box.Size = UDim2.new(1,-20,0,35)
    box.Position = position or UDim2.new(0,10,0,35)
    box.BackgroundColor3 = Color3.fromRGB(65,65,75)
    box.BorderSizePixel = 0
    box.PlaceholderText = placeholder
    box.Text = ""
    box.TextColor3 = Color3.fromRGB(255,255,255)
    box.Font = Enum.Font.Gotham
    box.TextSize = 16
    box.ClearTextOnFocus = false
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0,6)
    corner.Parent = box
    box.Parent = parent
    return box
end

-- Recreate input boxes
local UsernameBox = createTextBox(InputSection,"Enter Username / UserID")
local PlaceIdBox = createTextBox(InputSection,"PlaceID or leave empty for current game", UDim2.new(0,10,0,75))

-- Settings Section boxes (side by side, fixed alignment)
local ThreadsBox = createTextBox(SettingsSection,"Threads", UDim2.new(0,10,0,35))
ThreadsBox.Size = UDim2.new(0.45,-10,0,35)
local MaxServersBox = createTextBox(SettingsSection,"Max Servers", UDim2.new(0.55,0,0,35))
MaxServersBox.Size = UDim2.new(0.45,-10,0,35)

-- Target Section Labels
local UsernameDisplay = Instance.new("TextLabel")
UsernameDisplay.BackgroundTransparency = 1
UsernameDisplay.Position = UDim2.new(0,10,0,35)
UsernameDisplay.Size = UDim2.new(1,-120,0,25)
UsernameDisplay.Font = Enum.Font.Gotham
UsernameDisplay.TextSize = 14
UsernameDisplay.TextXAlignment = Enum.TextXAlignment.Left
UsernameDisplay.TextColor3 = Color3.fromRGB(255,255,255)
UsernameDisplay.Text = "Username: Not loaded"
UsernameDisplay.Parent = TargetSection

local UserIdDisplay = Instance.new("TextLabel")
UserIdDisplay.BackgroundTransparency = 1
UserIdDisplay.Position = UDim2.new(0,10,0,60)
UserIdDisplay.Size = UDim2.new(1,-120,0,25)
UserIdDisplay.Font = Enum.Font.Gotham
UserIdDisplay.TextSize = 14
UserIdDisplay.TextXAlignment = Enum.TextXAlignment.Left
UserIdDisplay.TextColor3 = Color3.fromRGB(255,255,255)
UserIdDisplay.Text = "UserID: Not loaded"
UserIdDisplay.Parent = TargetSection

local AvatarImage = Instance.new("ImageLabel")
AvatarImage.Size = UDim2.new(0,90,0,90)
AvatarImage.Position = UDim2.new(1,-110,0,35)
AvatarImage.BackgroundColor3 = Color3.fromRGB(65,65,75)
AvatarImage.BorderSizePixel = 0
AvatarImage.ScaleType = Enum.ScaleType.Fit
AvatarImage.ImageTransparency = 1
local avatarCorner = Instance.new("UICorner")
avatarCorner.CornerRadius = UDim.new(1,0)
avatarCorner.Parent = AvatarImage
AvatarImage.Parent = TargetSection

-- Progress Section Bar
local ProgressBarBG = Instance.new("Frame")
ProgressBarBG.Size = UDim2.new(1,-20,0,20)
ProgressBarBG.Position = UDim2.new(0,10,0,30)
ProgressBarBG.BackgroundColor3 = Color3.fromRGB(65,65,75)
ProgressBarBG.BorderSizePixel = 0
ProgressBarBG.Parent = ProgressSection
local bgCorner = Instance.new("UICorner")
bgCorner.CornerRadius = UDim.new(0,10)
bgCorner.Parent = ProgressBarBG

local ProgressBar = Instance.new("Frame")
ProgressBar.Size = UDim2.new(0,0,1,0)
ProgressBar.BackgroundColor3 = Color3.fromRGB(255,170,0)
ProgressBar.BorderSizePixel = 0
ProgressBar.Parent = ProgressBarBG
local fillCorner = Instance.new("UICorner")
fillCorner.CornerRadius = UDim.new(0,10)
fillCorner.Parent = ProgressBar

local ProgressLabel = Instance.new("TextLabel")
ProgressLabel.Size = UDim2.new(1,-20,0,20)
ProgressLabel.Position = UDim2.new(0,10,0,5)
ProgressLabel.BackgroundTransparency = 1
ProgressLabel.Font = Enum.Font.Gotham
ProgressLabel.TextSize = 14
ProgressLabel.TextColor3 = Color3.fromRGB(200,200,200)
ProgressLabel.TextXAlignment = Enum.TextXAlignment.Left
ProgressLabel.Text = "Ready to snipe!"
ProgressLabel.Parent = ProgressSection

-- Smooth fade-in animation for sections
for _, frame in ipairs({InputSection,SettingsSection,TargetSection,ProgressSection}) do
    frame.Position = UDim2.new(frame.Position.X.Scale,frame.Position.X.Offset,frame.Position.Y.Scale,frame.Position.Y.Offset + 50)
    frame.BackgroundTransparency = 1
    TweenService:Create(frame,TweenInfo.new(0.5,Enum.EasingStyle.Quart),{Position=UDim2.new(frame.Position.X.Scale,frame.Position.X.Offset,frame.Position.Y.Scale,frame.Position.Y.Offset - 50),BackgroundTransparency=0}):Play()
end

-- Hover effects
local function addHover(button, hoverColor, normalColor)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor}):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = normalColor}):Play()
    end)
end

addHover(StartButton, Color3.fromRGB(255, 190, 50), Color3.fromRGB(255, 170, 0))
addHover(CloseButton, Color3.fromRGB(220, 53, 69), Color3.fromRGB(255, 255, 255))
addHover(MinimizeButton, Color3.fromRGB(255, 193, 7), Color3.fromRGB(255, 255, 255))

-- Auto-fill current PlaceID
PlaceIdBox.Text = tostring(game.PlaceId)

-- Set shared
shared.STREAM_SNIPER = Screenguini

-- Variables
local searching = false
local confirm = false
local threads = 30
local maxServers = 1000
local searched = 0
local playersFound = 0

local function HttpGet(url)
    local success, result = pcall(game.HttpGet, game, url)
    if success then
        local decodeSuccess, decoded = pcall(HttpService.JSONDecode, HttpService, result)
        return decodeSuccess, decoded
    end
    return false, nil
end

local function updateProgress(text, progress)
    ProgressLabel.Text = text
    if progress then
        TweenService:Create(ProgressBar, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Size = UDim2.new(progress / maxServers, 0, 1, 0)}):Play()
    end
end

local function fetchThumbs(tokens)
    if #tokens == 0 then return true, {} end
    local bodyTable = {}
    for i, token in ipairs(tokens) do
        table.insert(bodyTable, {
            requestId = "0:" .. token .. ":AvatarHeadshot:150x150:png:regular",
            type = "AvatarHeadShot",
            targetId = 0,
            token = token,
            format = "png",
            size = "150x150"
        })
    end
    local payload = {
        Url = "https://thumbnails.roblox.com/v1/batch",
        Headers = {["Content-Type"] = "application/json"},
        Method = "POST",
        Body = HttpService:JSONEncode(bodyTable)
    }
    local success, response = pcall(httprequest, payload)
    if success then
        local decodeSuccess, data = pcall(HttpService.JSONDecode, HttpService, response.Body)
        return decodeSuccess, data and data.data or {}
    end
    return false, {}
end

local function teleportToServer(placeId, jobId)
    updateProgress("Teleporting to server...", 1)
    TeleportService:TeleportToPlaceInstance(placeId, jobId, Players.LocalPlayer)
    local attempts = 0
    local maxAttempts = 3
    spawn(function()
        repeat
            wait(2)
            attempts = attempts + 1
            if not Players.LocalPlayer.Parent then
                updateProgress("Teleport failed, retrying... (" .. attempts .. "/" .. maxAttempts .. ")", 1)
                TeleportService:TeleportToPlaceInstance(placeId, jobId, Players.LocalPlayer)
            else
                break
            end
        until attempts >= maxAttempts
        if attempts >= maxAttempts then
            updateProgress("Teleport failed after " .. maxAttempts .. " attempts.", 1)
        end
    end)
end

local function getServers(placeId, cursor)
    local url = "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?limit=100"
    if cursor then
        url = url .. "&cursor=" .. cursor
    end
    return HttpGet(url)
end

-- Main Search Function
local function startSearch()
    if confirm then
        confirm = false
        searching = false
        updateProgress("Search cancelled by user.", 0)
        StartButton.Text = "🚀 Start Sniping"
        return
    end

    if searching then
        confirm = true
        local originalText = StartButton.Text
        StartButton.Text = "❌ Cancel Search (Click again to confirm)"
        spawn(function()
            wait(5)
            if confirm then
                confirm = false
                StartButton.Text = originalText
            end
        end)
        return
    end

    local targetInput = UsernameBox.Text:match("^%s*(.-)%s*$")
    if targetInput == "" then
        updateProgress("Please enter a username or UserID!", 0)
        return
    end

    threads = math.max(1, tonumber(ThreadsBox.Text) or 30)
    maxServers = math.max(1, tonumber(MaxServersBox.Text) or 1000)

    searching = true
    confirm = false
    StartButton.Text = "⏹️ Stop Search"
    searched = 0
    playersFound = 0
    ProgressBar.Size = UDim2.new(0, 0, 1, 0)

    spawn(function()
        updateProgress("🔍 Resolving user info...")
        local userId, username
        local success, err = pcall(function()
            userId = tonumber(targetInput) or Players:GetUserIdFromNameAsync(targetInput)
            username = Players:GetNameFromUserIdAsync(userId)
        end)
        if not success then
            updateProgress("❌ Invalid username/UserID: " .. tostring(err), 0)
            searching = false
            StartButton.Text = "🚀 Start Sniping"
            return
        end

        UsernameDisplay.Text = "Username: " .. username
        UserIdDisplay.Text = "UserID: " .. userId

        updateProgress("🖼️ Fetching avatar...")
        local thumbSuccess, thumbData = HttpGet("https://thumbnails.roblox.com/v1/users/avatar-headshot?userIds=" .. userId .. "&format=Png&size=150x150&isCircular=false")
        local targetThumb = thumbSuccess and thumbData and thumbData.data and thumbData.data[1] and thumbData.data[1].imageUrl or ""

        if targetThumb ~= "" then
            AvatarImage.Image = targetThumb
            TweenService:Create(AvatarImage, TweenInfo.new(0.5), {ImageTransparency = 0}):Play()
        end

        local placeId = tonumber(PlaceIdBox.Text) or game.PlaceId
        updateProgress("🎯 Searching for " .. username .. " in Place " .. placeId .. "...")

        local cursor = nil
        local totalSearched = 0

        repeat
            if not searching then break end
            local success, result = getServers(placeId, cursor)
            if not success then
                updateProgress("❌ Failed to fetch servers. Retrying...", totalSearched / maxServers)
                wait(1)
                continue
            end

            local servers = result.data or {}
            cursor = result.nextPageCursor

            for i = 1, #servers do
                if not searching or totalSearched >= maxServers then break end
                local server = servers[i]
                spawn(function()
                    local thumbSuccess, thumbs = fetchThumbs(server.playerTokens or {})
                    if thumbSuccess then
                        playersFound = playersFound + #thumbs
                        for _, thumb in ipairs(thumbs) do
                            if thumb.state == "Completed" and thumb.imageUrl == targetThumb then
                                searching = false
                                updateProgress("✅ Found " .. username .. "! Teleporting...", 1)
                                StartButton.Text = "🚀 Start Sniping"
                                teleportToServer(placeId, server.id)
                                return
                            end
                        end
                    end
                    totalSearched = totalSearched + 1
                    updateProgress("Scanned " .. totalSearched .. "/" .. maxServers .. " servers (" .. playersFound .. " players checked)", totalSearched / maxServers)
                end)
                if i % threads == 0 then
                    wait(0.1)
                end
            end

            if not cursor then
                break
            end
            wait(0.5)
        until totalSearched >= maxServers or not searching

        if searching then
            updateProgress("❌ " .. username .. " not found in public servers (try VIP? Or increase max servers).", 1)
        end

        searching = false
        StartButton.Text = "🚀 Start Sniping"
        ProgressBar.Size = UDim2.new(0, 0, 1, 0)
    end)
end

StartButton.MouseButton1Click:Connect(startSearch)

-- Initial animation
MainFrame.Size = UDim2.new(0, 0, 0, 0)
TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = UDim2.new(0, 450, 0, 350)}):Play()

print("GUI upgraded: Black shadows removed, full gray theme applied, alignments fixed. Clean and aligned! 🚀")
